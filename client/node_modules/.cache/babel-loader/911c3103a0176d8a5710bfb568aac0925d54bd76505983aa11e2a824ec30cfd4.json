{"ast":null,"code":"import axios from 'axios';\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authApi = {\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    return response.data;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data.user;\n  }\n};\n\n// Users API\nexport const usersApi = {\n  getUsers: async params => {\n    const response = await api.get('/users', {\n      params\n    });\n    return response.data;\n  },\n  getUserProfile: async userId => {\n    const response = await api.get(`/users/${userId}`);\n    return response.data;\n  },\n  updateProfile: async (userId, userData) => {\n    const response = await api.put(`/users/${userId}`, userData);\n    return response.data;\n  },\n  addTeachingSkill: async (userId, skillData) => {\n    const response = await api.post(`/users/${userId}/teach-skills`, skillData);\n    return response.data;\n  },\n  removeTeachingSkill: async (userId, skillId) => {\n    const response = await api.delete(`/users/${userId}/teach-skills/${skillId}`);\n    return response.data;\n  },\n  addLearningSkill: async (userId, skillData) => {\n    const response = await api.post(`/users/${userId}/learn-skills`, skillData);\n    return response.data;\n  },\n  removeLearningSkill: async (userId, skillId) => {\n    const response = await api.delete(`/users/${userId}/learn-skills/${skillId}`);\n    return response.data;\n  },\n  getAvailableSkills: async params => {\n    const response = await api.get('/users/skills/available', {\n      params\n    });\n    return response.data;\n  }\n};\n\n// Matches API\nexport const matchesApi = {\n  getMatches: async params => {\n    const response = await api.get('/matches', {\n      params\n    });\n    return response.data;\n  },\n  createMatch: async targetUserId => {\n    const response = await api.post('/matches', {\n      targetUserId\n    });\n    return response.data;\n  },\n  getActiveMatches: async () => {\n    const response = await api.get('/matches/active');\n    return response.data;\n  },\n  updateMatchStatus: async (matchId, status) => {\n    const response = await api.put(`/matches/${matchId}`, {\n      status\n    });\n    return response.data;\n  },\n  getSuggestions: async params => {\n    const response = await api.get('/matches/suggestions', {\n      params\n    });\n    return response.data;\n  }\n};\n\n// Messages API\nexport const messagesApi = {\n  getMessages: async (userId, params) => {\n    const response = await api.get(`/messages/${userId}`, {\n      params\n    });\n    return response.data;\n  },\n  sendMessage: async (recipientId, content) => {\n    const response = await api.post('/messages', {\n      recipientId,\n      content\n    });\n    return response.data;\n  },\n  getUnreadCount: async () => {\n    const response = await api.get('/messages/unread/count');\n    return response.data;\n  },\n  getConversations: async () => {\n    const response = await api.get('/messages/conversations/list');\n    return response.data;\n  },\n  markAsRead: async userId => {\n    const response = await api.put(`/messages/${userId}/read`);\n    return response.data;\n  },\n  deleteMessage: async messageId => {\n    const response = await api.delete(`/messages/${messageId}`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authApi","login","email","password","post","data","register","userData","getCurrentUser","get","user","usersApi","getUsers","params","getUserProfile","userId","updateProfile","put","addTeachingSkill","skillData","removeTeachingSkill","skillId","delete","addLearningSkill","removeLearningSkill","getAvailableSkills","matchesApi","getMatches","createMatch","targetUserId","getActiveMatches","updateMatchStatus","matchId","getSuggestions","messagesApi","getMessages","sendMessage","recipientId","content","getUnreadCount","getConversations","markAsRead","deleteMessage","messageId"],"sources":["/Users/moeezahmad/CareAI/client/src/services/api.ts"],"sourcesContent":["import axios, { AxiosInstance } from 'axios';\nimport { User, UserProfile, Match, Message, Conversation, Skill, AuthResponse } from '../types';\n\n// Create axios instance with base configuration\nconst api: AxiosInstance = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authApi = {\n  login: async (email: string, password: string): Promise<AuthResponse> => {\n    const response = await api.post('/auth/login', { email, password });\n    return response.data;\n  },\n\n  register: async (userData: {\n    username: string;\n    email: string;\n    password: string;\n    fullName: string;\n    bio?: string;\n    location?: string;\n  }): Promise<AuthResponse> => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n\n  getCurrentUser: async (): Promise<User> => {\n    const response = await api.get('/auth/me');\n    return response.data.user;\n  },\n};\n\n// Users API\nexport const usersApi = {\n  getUsers: async (params?: {\n    search?: string;\n    category?: string;\n    limit?: number;\n    offset?: number;\n  }): Promise<{ users: User[] }> => {\n    const response = await api.get('/users', { params });\n    return response.data;\n  },\n\n  getUserProfile: async (userId: number): Promise<{ user: UserProfile }> => {\n    const response = await api.get(`/users/${userId}`);\n    return response.data;\n  },\n\n  updateProfile: async (userId: number, userData: Partial<User>): Promise<{ message: string }> => {\n    const response = await api.put(`/users/${userId}`, userData);\n    return response.data;\n  },\n\n  addTeachingSkill: async (userId: number, skillData: {\n    skillId: number;\n    proficiencyLevel?: string;\n    experienceYears?: number;\n  }): Promise<{ message: string }> => {\n    const response = await api.post(`/users/${userId}/teach-skills`, skillData);\n    return response.data;\n  },\n\n  removeTeachingSkill: async (userId: number, skillId: number): Promise<{ message: string }> => {\n    const response = await api.delete(`/users/${userId}/teach-skills/${skillId}`);\n    return response.data;\n  },\n\n  addLearningSkill: async (userId: number, skillData: {\n    skillId: number;\n    priorityLevel?: string;\n  }): Promise<{ message: string }> => {\n    const response = await api.post(`/users/${userId}/learn-skills`, skillData);\n    return response.data;\n  },\n\n  removeLearningSkill: async (userId: number, skillId: number): Promise<{ message: string }> => {\n    const response = await api.delete(`/users/${userId}/learn-skills/${skillId}`);\n    return response.data;\n  },\n\n  getAvailableSkills: async (params?: { category?: string }): Promise<{ skills: Skill[] }> => {\n    const response = await api.get('/users/skills/available', { params });\n    return response.data;\n  },\n};\n\n// Matches API\nexport const matchesApi = {\n  getMatches: async (params?: {\n    limit?: number;\n    offset?: number;\n  }): Promise<{ matches: Match[] }> => {\n    const response = await api.get('/matches', { params });\n    return response.data;\n  },\n\n  createMatch: async (targetUserId: number): Promise<{ message: string; matchId: number; matchScore: number }> => {\n    const response = await api.post('/matches', { targetUserId });\n    return response.data;\n  },\n\n  getActiveMatches: async (): Promise<{ matches: any[] }> => {\n    const response = await api.get('/matches/active');\n    return response.data;\n  },\n\n  updateMatchStatus: async (matchId: number, status: string): Promise<{ message: string }> => {\n    const response = await api.put(`/matches/${matchId}`, { status });\n    return response.data;\n  },\n\n  getSuggestions: async (params?: { limit?: number }): Promise<{ suggestions: any[] }> => {\n    const response = await api.get('/matches/suggestions', { params });\n    return response.data;\n  },\n};\n\n// Messages API\nexport const messagesApi = {\n  getMessages: async (userId: number, params?: {\n    limit?: number;\n    offset?: number;\n  }): Promise<{ messages: Message[] }> => {\n    const response = await api.get(`/messages/${userId}`, { params });\n    return response.data;\n  },\n\n  sendMessage: async (recipientId: number, content: string): Promise<{ message: Message }> => {\n    const response = await api.post('/messages', { recipientId, content });\n    return response.data;\n  },\n\n  getUnreadCount: async (): Promise<{ unreadCount: number }> => {\n    const response = await api.get('/messages/unread/count');\n    return response.data;\n  },\n\n  getConversations: async (): Promise<{ conversations: Conversation[] }> => {\n    const response = await api.get('/messages/conversations/list');\n    return response.data;\n  },\n\n  markAsRead: async (userId: number): Promise<{ message: string; updatedCount: number }> => {\n    const response = await api.put(`/messages/${userId}/read`);\n    return response.data;\n  },\n\n  deleteMessage: async (messageId: number): Promise<{ message: string }> => {\n    const response = await api.delete(`/messages/${messageId}`);\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAG5C;AACA,MAAMC,GAAkB,GAAGD,KAAK,CAACE,MAAM,CAAC;EACtCC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMS,OAAO,GAAG;EACrBC,KAAK,EAAE,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAA4B;IACvE,MAAMb,QAAQ,GAAG,MAAMZ,GAAG,CAAC0B,IAAI,CAAC,aAAa,EAAE;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC;IACnE,OAAOb,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDC,QAAQ,EAAE,MAAOC,QAOhB,IAA4B;IAC3B,MAAMjB,QAAQ,GAAG,MAAMZ,GAAG,CAAC0B,IAAI,CAAC,gBAAgB,EAAEG,QAAQ,CAAC;IAC3D,OAAOjB,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDG,cAAc,EAAE,MAAAA,CAAA,KAA2B;IACzC,MAAMlB,QAAQ,GAAG,MAAMZ,GAAG,CAAC+B,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOnB,QAAQ,CAACe,IAAI,CAACK,IAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG;EACtBC,QAAQ,EAAE,MAAOC,MAKhB,IAAiC;IAChC,MAAMvB,QAAQ,GAAG,MAAMZ,GAAG,CAAC+B,GAAG,CAAC,QAAQ,EAAE;MAAEI;IAAO,CAAC,CAAC;IACpD,OAAOvB,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDS,cAAc,EAAE,MAAOC,MAAc,IAAqC;IACxE,MAAMzB,QAAQ,GAAG,MAAMZ,GAAG,CAAC+B,GAAG,CAAC,UAAUM,MAAM,EAAE,CAAC;IAClD,OAAOzB,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDW,aAAa,EAAE,MAAAA,CAAOD,MAAc,EAAER,QAAuB,KAAmC;IAC9F,MAAMjB,QAAQ,GAAG,MAAMZ,GAAG,CAACuC,GAAG,CAAC,UAAUF,MAAM,EAAE,EAAER,QAAQ,CAAC;IAC5D,OAAOjB,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDa,gBAAgB,EAAE,MAAAA,CAAOH,MAAc,EAAEI,SAIxC,KAAmC;IAClC,MAAM7B,QAAQ,GAAG,MAAMZ,GAAG,CAAC0B,IAAI,CAAC,UAAUW,MAAM,eAAe,EAAEI,SAAS,CAAC;IAC3E,OAAO7B,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDe,mBAAmB,EAAE,MAAAA,CAAOL,MAAc,EAAEM,OAAe,KAAmC;IAC5F,MAAM/B,QAAQ,GAAG,MAAMZ,GAAG,CAAC4C,MAAM,CAAC,UAAUP,MAAM,iBAAiBM,OAAO,EAAE,CAAC;IAC7E,OAAO/B,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDkB,gBAAgB,EAAE,MAAAA,CAAOR,MAAc,EAAEI,SAGxC,KAAmC;IAClC,MAAM7B,QAAQ,GAAG,MAAMZ,GAAG,CAAC0B,IAAI,CAAC,UAAUW,MAAM,eAAe,EAAEI,SAAS,CAAC;IAC3E,OAAO7B,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDmB,mBAAmB,EAAE,MAAAA,CAAOT,MAAc,EAAEM,OAAe,KAAmC;IAC5F,MAAM/B,QAAQ,GAAG,MAAMZ,GAAG,CAAC4C,MAAM,CAAC,UAAUP,MAAM,iBAAiBM,OAAO,EAAE,CAAC;IAC7E,OAAO/B,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDoB,kBAAkB,EAAE,MAAOZ,MAA8B,IAAmC;IAC1F,MAAMvB,QAAQ,GAAG,MAAMZ,GAAG,CAAC+B,GAAG,CAAC,yBAAyB,EAAE;MAAEI;IAAO,CAAC,CAAC;IACrE,OAAOvB,QAAQ,CAACe,IAAI;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAMqB,UAAU,GAAG;EACxBC,UAAU,EAAE,MAAOd,MAGlB,IAAoC;IACnC,MAAMvB,QAAQ,GAAG,MAAMZ,GAAG,CAAC+B,GAAG,CAAC,UAAU,EAAE;MAAEI;IAAO,CAAC,CAAC;IACtD,OAAOvB,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDuB,WAAW,EAAE,MAAOC,YAAoB,IAAwE;IAC9G,MAAMvC,QAAQ,GAAG,MAAMZ,GAAG,CAAC0B,IAAI,CAAC,UAAU,EAAE;MAAEyB;IAAa,CAAC,CAAC;IAC7D,OAAOvC,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDyB,gBAAgB,EAAE,MAAAA,CAAA,KAAyC;IACzD,MAAMxC,QAAQ,GAAG,MAAMZ,GAAG,CAAC+B,GAAG,CAAC,iBAAiB,CAAC;IACjD,OAAOnB,QAAQ,CAACe,IAAI;EACtB,CAAC;EAED0B,iBAAiB,EAAE,MAAAA,CAAOC,OAAe,EAAEvC,MAAc,KAAmC;IAC1F,MAAMH,QAAQ,GAAG,MAAMZ,GAAG,CAACuC,GAAG,CAAC,YAAYe,OAAO,EAAE,EAAE;MAAEvC;IAAO,CAAC,CAAC;IACjE,OAAOH,QAAQ,CAACe,IAAI;EACtB,CAAC;EAED4B,cAAc,EAAE,MAAOpB,MAA2B,IAAsC;IACtF,MAAMvB,QAAQ,GAAG,MAAMZ,GAAG,CAAC+B,GAAG,CAAC,sBAAsB,EAAE;MAAEI;IAAO,CAAC,CAAC;IAClE,OAAOvB,QAAQ,CAACe,IAAI;EACtB;AACF,CAAC;;AAED;AACA,OAAO,MAAM6B,WAAW,GAAG;EACzBC,WAAW,EAAE,MAAAA,CAAOpB,MAAc,EAAEF,MAGnC,KAAuC;IACtC,MAAMvB,QAAQ,GAAG,MAAMZ,GAAG,CAAC+B,GAAG,CAAC,aAAaM,MAAM,EAAE,EAAE;MAAEF;IAAO,CAAC,CAAC;IACjE,OAAOvB,QAAQ,CAACe,IAAI;EACtB,CAAC;EAED+B,WAAW,EAAE,MAAAA,CAAOC,WAAmB,EAAEC,OAAe,KAAoC;IAC1F,MAAMhD,QAAQ,GAAG,MAAMZ,GAAG,CAAC0B,IAAI,CAAC,WAAW,EAAE;MAAEiC,WAAW;MAAEC;IAAQ,CAAC,CAAC;IACtE,OAAOhD,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDkC,cAAc,EAAE,MAAAA,CAAA,KAA8C;IAC5D,MAAMjD,QAAQ,GAAG,MAAMZ,GAAG,CAAC+B,GAAG,CAAC,wBAAwB,CAAC;IACxD,OAAOnB,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDmC,gBAAgB,EAAE,MAAAA,CAAA,KAAwD;IACxE,MAAMlD,QAAQ,GAAG,MAAMZ,GAAG,CAAC+B,GAAG,CAAC,8BAA8B,CAAC;IAC9D,OAAOnB,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDoC,UAAU,EAAE,MAAO1B,MAAc,IAAyD;IACxF,MAAMzB,QAAQ,GAAG,MAAMZ,GAAG,CAACuC,GAAG,CAAC,aAAaF,MAAM,OAAO,CAAC;IAC1D,OAAOzB,QAAQ,CAACe,IAAI;EACtB,CAAC;EAEDqC,aAAa,EAAE,MAAOC,SAAiB,IAAmC;IACxE,MAAMrD,QAAQ,GAAG,MAAMZ,GAAG,CAAC4C,MAAM,CAAC,aAAaqB,SAAS,EAAE,CAAC;IAC3D,OAAOrD,QAAQ,CAACe,IAAI;EACtB;AACF,CAAC;AAED,eAAe3B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}